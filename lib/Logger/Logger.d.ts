import { ILogSink } from "../Sinks/ILogSink";
import { IPayload } from "./IPayload";
import { ILogger } from "./ILogger";
export declare class Logger implements ILogger {
    private sinks;
    private appName;
    private environment;
    private context;
    constructor(sinks: ILogSink[], appName: string, environment: string, context: string);
    debug(message: string): any;
    debug(message: string, exception: Error): any;
    debug(message: string, payload: IPayload): any;
    debug(message: string, exception: Error, payload: IPayload): any;
    info(message: string): any;
    info(message: string, exception: Error): any;
    info(message: string, payload: IPayload): any;
    info(message: string, exception: Error, payload: IPayload): any;
    warn(message: string): any;
    warn(message: string, exception: Error): any;
    warn(message: string, payload: IPayload): any;
    warn(message: string, exception: Error, payload: IPayload): any;
    error(message: string): any;
    error(message: string, exception: Error): any;
    error(message: string, payload: IPayload): any;
    error(message: string, exception: Error, payload: IPayload): any;
    fatal(message: string): any;
    fatal(message: string, exception: Error): any;
    fatal(message: string, payload: IPayload): any;
    fatal(message: string, exception: Error, payload: IPayload): any;
    private log;
}
